// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
    id Int @id @default(autoincrement())
    author Author? @relation(fields: [authorId], references: [id])
    authorId Int? @unique
}

//  作者表
model Author {
  id       Int      @id @default(autoincrement())
  email    String   @unique
  name     String?
  articles Article[]
  userId   User?
  isEnable Boolean  @default(false)
}

//  状态：【0：禁用，1：未审核，2：已发布】
enum ArticleState {
    BAN
    PENDING
    PUBLISHED
}

model Article {
    id String @db.VarChar(255) @default(uuid()) @unique
    createTime DateTime @default(now())
    updateTime DateTime @default(now()) @updatedAt
    title String @db.VarChar(50)
    content Unsupported("text")
    state ArticleState @default(PENDING)
    sourceName String @db.VarChar(20)
    sourceUrl String @db.VarChar(50)
    author Author @relation(fields: [authorId], references: [id])
    authorId Int
}

model Talent {
    id Int @id @default(autoincrement())
    realName String @db.VarChar(255)
    profile Profile?
}

model Profile {
  id            Int         @id @default(autoincrement())
  createTime    DateTime    @default(now())
  updateTime    DateTime    @default(now()) @updatedAt
  talent        Talent      @relation(fields: [talentId], references: [id])
  talentId      Int         @unique
  company       Company[]
}

model CompanyType {
    id Int @id @default(autoincrement())
    company Company[]
}

model Company {
    id              Int @id @default(autoincrement())
    createTime      DateTime @default(now())
    updateTime      DateTime @default(now()) @updatedAt
    name            String @db.VarChar(255)
    startDate       DateTime
    endDate         DateTime
    stillIn         Boolean @default(false)
    companyType     CompanyType @relation(fields: [companyTypeId], references: [id])
    companyTypeId   Int
    profile         Profile @relation(fields: [profileId],references:[id])
    profileId       Int
}

model Project {
    id Int @id @default(autoincrement())
    name String @db.VarChar(255)
    character String @db.VarChar(255)
    content String? @db.VarChar(255)
}