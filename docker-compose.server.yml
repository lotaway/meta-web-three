services:

  product-service:
    build:
      context: ./server/product-service
      dockerfile: Dockerfile
    container_name: meta-web-three/product-service
    ports:
      - "10082:10082"
    command: ["java", "-jar", "/product-service.jar"]
    volumes:
      - product_service_data:/server/product
    # depends_on:
    #   zookeeper:
    #     - condition: service_healthy
    #   postgres:
    #     - condition: service_healthy
    #   redis:
    #     condition: service_started
    networks:
      - meta-web-three
    restart: unless-stopped

  user-service:
    build:
      context: ./server/user-service
      dockerfile: Dockerfile
    container_name: meta-web-three/user-service
    ports:
      - "10083:10083"
    command: ["java", "-jar", "/user-service.jar"]
    volumes:
      - user_service_data:/server/user
    networks:
      - meta-web-three
    restart: unless-stopped

  order-service:
    build:
      context: ./server/order-service
      dockerfile: Dockerfile
    container_name: meta-web-three/order-service
    ports:
      - "10084:10084"
    command: ["java", "-jar", "/order-service.jar"]
    volumes:
      - order_service_data:/server/order
    networks:
      - meta-web-three
    restart: unless-stopped

  message-service:
    build:
      context: ./server/message-service
      dockerfile: Dockerfile
    container_name: meta-web-three/message-service
    ports:
      - "10085:10085"
    command: ["java", "-jar", "/message-service.jar"]
    volumes:
      - message_service_data:/server/message
    # depends_on:
    #   zookeeper:
    #     - condition: service_healthy
    #   postgres:
    #     - condition: service_healthy
    #   redis:
    #     condition: service_started
    networks:
      - meta-web-three
    restart: unless-stopped

  payment-service:
    build:
      context: ./server/payment-service
      dockerfile: Dockerfile
    container_name: meta-web-three/payment-service
    ports:
      - "10086:10086"
    command: ["java", "-jar", "/payment-service.jar"]
    volumes:
      - payment_service_data:/server/payment
    # environment:
    #   - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/payment_service
    #   - SPRING_DATASOURCE_USERNAME=root
    #   - SPRING_DATASOURCE_PASSWORD=root
    #   - SPRING_REDIS_HOST=redis
    #   - SPRING_REDIS_PORT=6379
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_started
    networks:
      - meta-web-three
    restart: unless-stopped


  media-service:
    build:
      context: ./server/media-service
      dockerfile: Dockerfile
    container_name: meta-web-three/media-service
    ports:
      - "10087:10087"
    command: ["java", "-jar", "/media-service.jar"]
    volumes:
      - media_service_data:/server/media
    networks:
      - meta-web-three
    restart: unless-stopped



volumes:
  product_service_data:
  user_service_data:
  order_service_data:
  message_service_data:
  payment_service_data:
  media_service_data: