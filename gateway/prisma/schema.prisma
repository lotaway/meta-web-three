// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
  binaryTargets = ["native", "debian-openssl-1.1.x"]
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

//  用户表
model User {
  id       Int      @id @default(autoincrement())
  email    String   @unique
  password String
  author   Author?  @relation(fields: [author_id], references: [id])
  author_id Int?     @unique
  user_type User_type? @relation(fields: [type_id], references: [id])
  type_id   Int?
}

//  用户类型，权限管理，如顾客、代理商、客服、管理员等
model User_type {
  id Int @id @default(autoincrement())
  type Int @db.TinyInt() @default(0)
  type_name String @db.VarChar(10) @default("")
  desc String @default("")
  user User[]
}

//  作者表
model Author {
  id       Int       @id @default(autoincrement())
  real_name String?
  articles Article[]
  user_id   User?
  is_enable Boolean   @default(false)
}

//  状态：【0：禁用，1：未审核，2：已发布】
enum ArticleState {
  BAN
  PENDING
  PUBLISHED
}

model Article {
  id         String              @db.VarChar(255) @default(uuid()) @unique
  create_time DateTime            @default(now())
  update_at  DateTime            @default(now()) @updatedAt
  title      String              @db.VarChar(50)
  content    Unsupported("text")
  state      ArticleState        @default(PENDING)
  source_name String              @db.VarChar(20)
  source_url  String              @db.VarChar(50)
  author     Author              @relation(fields: [author_id], references: [id])
  author_id   Int
}

model Talent {
  id       Int      @id @default(autoincrement())
  real_name String   @db.VarChar(255)
  profile  Profile?
}

model Profile {
  id         Int       @id @default(autoincrement())
  create_time DateTime  @default(now())
  update_time DateTime  @default(now()) @updatedAt
  talent     Talent    @relation(fields: [talent_id], references: [id])
  talent_id   Int       @unique
  company    Company[]
}

model Company_type {
  id      Int       @id @default(autoincrement())
  company Company[]
}

model Company {
  id            Int         @id @default(autoincrement())
  create_time    DateTime    @default(now())
  update_time    DateTime    @default(now()) @updatedAt
  name          String      @db.VarChar(255)
  start_date     DateTime
  end_date       DateTime
  still_in       Boolean     @default(false)
  company_type   Company_type @relation(fields: [company_type_id], references: [id])
  company_type_id Int
  profile       Profile     @relation(fields: [profile_id], references: [id])
  profile_id     Int
}

model Project {
  id        Int     @id @default(autoincrement())
  name      String  @db.VarChar(255)
  character String  @db.VarChar(255)
  content   String? @db.VarChar(255)
}
